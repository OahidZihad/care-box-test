{"version":3,"sources":["Components/MainForm/MainForm.js","Components/GetData/GetData.js","Components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["MainForm","useState","info","setInfo","handleBlur","e","newInfo","target","name","value","console","log","useForm","register","handleSubmit","errors","formState","className","style","boxShadow","onSubmit","data","formData","FormData","append","Title","Author_Name","Phone","Email","Description","fetch","method","body","then","result","json","response","class","type","placeholder","required","onBlur","rows","GetData","getItems","setGetItems","setTitle","setAuthor_Name","setPhone","setEmail","setDescription","date","setDate","updateId","setUpdateId","useEffect","getUpdatedInfo","Posted_At","id","backgroundColor","scope","map","item","index","onClick","filter","selectField","onChange","headers","Home","to","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.001a8041.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useState } from \"react/cjs/react.development\";\r\n// import { postData, getData } from \"../services/DataService\";\r\n\r\nconst MainForm = () => {\r\n  const [info, setInfo] = useState({});\r\n\r\n  const handleBlur = (e) => {\r\n    const newInfo = { ...info };\r\n    newInfo[e.target.name] = e.target.value;\r\n    setInfo(newInfo);\r\n    console.log(info);\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    const formData = new FormData();\r\n    formData.append(\"Title\", info.Title);\r\n    formData.append(\"Author_Name\", info.Author_Name);\r\n    formData.append(\"Phone\", info.Phone);\r\n    formData.append(\"Email\", info.Email);\r\n    formData.append(\"Description\", info.Description);\r\n    console.log(\"formData\", formData);\r\n\r\n    fetch(\"https://care-box-backend.herokuapp.com/api/v1/applicant_test/\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    }).then((result) => {\r\n      result.json().then((response) => {\r\n        console.log(response, result);\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"mt-5 d-flex justify-content-center\">\r\n      <div\r\n        style={{ boxShadow: \"3px 3px 5px gray\" }}\r\n        className=\"card w-75 px-4 pt-5\"\r\n      >\r\n        <h2 className=\"text-center\">Care-Box Form</h2>\r\n        <div className=\"card-body\">\r\n          <form className=\"p-4\" onSubmit={handleSubmit(onSubmit)}>\r\n            <div class=\"form-group mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Title\"\r\n                className=\"form-control\"\r\n                {...register(\"Title\", { required: true })}\r\n                onBlur={handleBlur}\r\n              />\r\n              {errors.Title && (\r\n                <span className=\"text-danger\">This field is required</span>\r\n              )}\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Author_Name\"\r\n                className=\"form-control\"\r\n                {...register(\"Author_Name\", { required: true })}\r\n                onBlur={handleBlur}\r\n              />\r\n              {errors.Author_Name && (\r\n                <span className=\"text-danger\">This field is required</span>\r\n              )}\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Phone\"\r\n                className=\"form-control\"\r\n                {...register(\"Phone\", { required: true })}\r\n                onBlur={handleBlur}\r\n              />\r\n              {errors.Phone && (\r\n                <span className=\"text-danger\">This field is required</span>\r\n              )}\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                className=\"form-control\"\r\n                {...register(\"Email\", { required: true })}\r\n                onBlur={handleBlur}\r\n              />\r\n              {errors.Email && (\r\n                <span className=\"text-danger\">This field is required</span>\r\n              )}\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control mb-3\"\r\n                placeholder=\"Description\"\r\n                rows=\"3\"\r\n                {...register(\"Description\", { required: true })}\r\n                onBlur={handleBlur}\r\n              ></textarea>\r\n              {errors.Description && (\r\n                <span className=\"text-danger\">This field is required</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group text-center\">\r\n              <button type=\"submit\" className=\"btn btn-dark\">\r\n                Send\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MainForm;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst GetData = () => {\r\n  const [getItems, setGetItems] = useState([]);\r\n  const [Title, setTitle] = useState(\"\");\r\n  const [Author_Name, setAuthor_Name] = useState(\"\");\r\n  const [Phone, setPhone] = useState(\"\");\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Description, setDescription] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [updateId, setUpdateId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getUpdatedInfo();\r\n  }, []);\r\n\r\n  const getUpdatedInfo = () => {\r\n    fetch(\"https://care-box-backend.herokuapp.com/api/v1/applicant_test/\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setGetItems(data);\r\n        setTitle(data[0].Title);\r\n        setAuthor_Name(data[0].Author_Name);\r\n        setPhone(data[0].Phone);\r\n        setEmail(data[0].Email);\r\n        setDescription(data[0].Description);\r\n        setDate(data[0].Posted_At);\r\n        setUpdateId(data[0].id);\r\n      });\r\n  };\r\n\r\n  const selectField = (id) => {\r\n    let item = getItems.filter((item) => item.id === id)[0];\r\n    console.log(item);\r\n    setTitle(item.Title);\r\n    setAuthor_Name(item.Author_Name);\r\n    setPhone(item.Phone);\r\n    setEmail(item.Email);\r\n    setDescription(item.Description);\r\n    setDate(item.Posted_At);\r\n    setUpdateId(item.id);\r\n  };\r\n  const updateInfo = () => {\r\n    let item = {\r\n      Title,\r\n      Author_Name,\r\n      Phone,\r\n      Email,\r\n      Description,\r\n      date,\r\n      updateId,\r\n    };\r\n    console.log(item);\r\n    const formData = new FormData();\r\n    formData.append(\"Title\", Title);\r\n    formData.append(\"Author_Name\", Author_Name);\r\n    formData.append(\"Phone\", Phone);\r\n    formData.append(\"Email\", Email);\r\n    formData.append(\"Description\", Description);\r\n    console.log(\"formData\", formData);\r\n    fetch(\r\n      `https://care-box-backend.herokuapp.com/api/v1/applicant_test/update_blog/${updateId}/`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Custom-User-Agent\": \"gsdf#g3243F466$\",\r\n        },\r\n        body: formData,\r\n      }\r\n    ).then((result) => {\r\n      result.json().then((response) => {\r\n        console.log(result, response);\r\n        getUpdatedInfo();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"mt-4\" style={{ backgroundColor: \"#F4FDFB\" }}>\r\n        <table className=\"table color-brand2 text-dark text-lowercase\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center text-uppercase\" scope=\"col\">\r\n                ID\r\n              </th>\r\n              <th className=\"text-center text-uppercase\" scope=\"col\">\r\n                Title\r\n              </th>\r\n              <th className=\"text-center text-uppercase\" scope=\"col\">\r\n                Author_Name\r\n              </th>\r\n\r\n              <th className=\"text-center text-uppercase\" scope=\"col\">\r\n                Phone\r\n              </th>\r\n              <th className=\"text-center text-uppercase\" scope=\"col\">\r\n                Email\r\n              </th>\r\n              <th className=\"text-center text-uppercase\" scope=\"col\">\r\n                Description\r\n              </th>\r\n              <th className=\"text-center text-uppercase\" scope=\"col\">\r\n                Posted_At\r\n              </th>\r\n              <th className=\"text-center text-uppercase\" scope=\"col\">\r\n                Action\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {getItems.map((item, index) => (\r\n              <tr>\r\n                <td className=\"text-center\">{item.id}</td>\r\n                <td className=\"text-center\">{item.Title}</td>\r\n                <td className=\"text-center\">{item.Author_Name}</td>\r\n                <td className=\"text-center\">{item.Phone}</td>\r\n                <td className=\"text-center\">{item.Email}</td>\r\n                <td className=\"text-center\">{item.Description}</td>\r\n                <td className=\"text-center\">{item.Posted_At}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-dark text-uppercase\"\r\n                    onClick={() => selectField(item.id)}\r\n                  >\r\n                    update\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={Title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            value={Author_Name}\r\n            onChange={(e) => setAuthor_Name(e.target.value)}\r\n          />{\" \"}\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            value={Phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n          />{\" \"}\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"Email\"\r\n            value={Email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />{\" \"}\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            value={Description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />{\" \"}\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"datetime-local\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n          />{\" \"}\r\n          <br />\r\n          <br />\r\n          <button className=\"btn btn-dark\" onClick={updateInfo}>\r\n            Update Information\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default GetData;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { useHistory } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  //   const history = useHistory();\r\n\r\n  //   const handleData = () => {\r\n  //     history.push(\"/data\");\r\n  //   };\r\n\r\n  //   const handleForm = () => {\r\n  //     history.push(\"/form\");\r\n  //   };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"mt-5 pt-5\">\r\n        Welcom to <br /> Care-Box Test\r\n      </h1>\r\n      {/* <button onClick={handleForm} class=\"btn btn-dark me-5 mt-3\">\r\n        Form\r\n      </button>\r\n      <button onClick={handleData} class=\"btn btn-dark mt-3\">\r\n        GetData\r\n      </button> */}\r\n      <Link to=\"/form\">Form</Link>\r\n      <br />\r\n      <Link to=\"/data\">GetData</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Routes,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport MainForm from \"./Components/MainForm/MainForm\";\nimport GetData from \"./Components/GetData/GetData\";\n// import Navbar from \"./Components/Navbar/Navbar\";\nimport Home from \"./Components/Home/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        {/* <Navbar></Navbar> */}\n        <Switch>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/form\">\n            <MainForm />\n          </Route>\n          <Route path=\"/data\">\n            <GetData />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}